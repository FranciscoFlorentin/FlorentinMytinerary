[{"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\index.js":"1","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\App.js":"2","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\mainReducer.js":"3","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\itineraryReducer.js":"4","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Admin.js":"5","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\cityReducer.js":"6","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Itineraries.js":"7","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Footer.js":"8","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\userReducer.js":"9","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\HomePage.js":"10","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\actions\\userActions.js":"11","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Cities.js":"12","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Login.js":"13","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Register.js":"14","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\NavBar.js":"15","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\actions\\cityActions.js":"16","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\actions\\itineraryActions.js":"17","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Carousel.js":"18","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Logo.js":"19","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Header.js":"20","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Loader.js":"21","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\CallToAction.js":"22","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Itinerary.js":"23","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\City.js":"24","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\NotItineraries.js":"25","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\CityNotFound.js":"26","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Activities.js":"27","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Comment.js":"28","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Activity.js":"29"},{"size":486,"mtime":1612284904923,"results":"30","hashOfConfig":"31"},{"size":1557,"mtime":1612984843886,"results":"32","hashOfConfig":"31"},{"size":308,"mtime":1612374231425,"results":"33","hashOfConfig":"31"},{"size":541,"mtime":1612984843935,"results":"34","hashOfConfig":"31"},{"size":3607,"mtime":1612284904903,"results":"35","hashOfConfig":"31"},{"size":780,"mtime":1612288094996,"results":"36","hashOfConfig":"31"},{"size":2291,"mtime":1613077389166,"results":"37","hashOfConfig":"31"},{"size":1729,"mtime":1612284904907,"results":"38","hashOfConfig":"31"},{"size":846,"mtime":1612984843951,"results":"39","hashOfConfig":"31"},{"size":522,"mtime":1612284904909,"results":"40","hashOfConfig":"31"},{"size":1910,"mtime":1612984843915,"results":"41","hashOfConfig":"31"},{"size":1385,"mtime":1612284904906,"results":"42","hashOfConfig":"31"},{"size":3281,"mtime":1613083055054,"results":"43","hashOfConfig":"31"},{"size":5246,"mtime":1613082911316,"results":"44","hashOfConfig":"31"},{"size":1510,"mtime":1612644655245,"results":"45","hashOfConfig":"31"},{"size":1036,"mtime":1612288087181,"results":"46","hashOfConfig":"31"},{"size":3113,"mtime":1612994532799,"results":"47","hashOfConfig":"31"},{"size":2152,"mtime":1612284904906,"results":"48","hashOfConfig":"31"},{"size":808,"mtime":1612284904920,"results":"49","hashOfConfig":"31"},{"size":518,"mtime":1612284904908,"results":"50","hashOfConfig":"31"},{"size":407,"mtime":1612284904919,"results":"51","hashOfConfig":"31"},{"size":1051,"mtime":1612284904905,"results":"52","hashOfConfig":"31"},{"size":5068,"mtime":1613081299270,"results":"53","hashOfConfig":"31"},{"size":677,"mtime":1612984843896,"results":"54","hashOfConfig":"31"},{"size":392,"mtime":1612284904921,"results":"55","hashOfConfig":"31"},{"size":330,"mtime":1612284904907,"results":"56","hashOfConfig":"31"},{"size":375,"mtime":1612284904901,"results":"57","hashOfConfig":"31"},{"size":2437,"mtime":1613075323067,"results":"58","hashOfConfig":"31"},{"size":417,"mtime":1612284904902,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"w8ueqe",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\index.js",[],["127","128"],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\App.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\mainReducer.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\itineraryReducer.js",["129"],"const initial={\r\n    itinerariesByCity:[],\r\n    itinerary:{}\r\n};\r\n\r\nconst itineraryReducer=(state=initial,action)=>{\r\n    switch (action.type) {\r\n        case (\"ITINERARIES_BY_CITY\"):\r\n            return{\r\n                ...state,\r\n                itinerariesByCity: action.payload\r\n            }\r\n            break;\r\n        case (\"ITINERARY\"):\r\n            return {\r\n                ...state,\r\n                itinerary:action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default itineraryReducer;","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Admin.js",["130","131"],"import {connect} from \"react-redux\";\r\nimport {useState} from \"react\";\r\nimport Swal from 'sweetalert2';\r\nimport cityActions from \"../redux/actions/cityActions\";\r\n\r\nconst Admin=({addCity})=>{\r\n    const [newCity,setNewCity]=useState({cityName:\"\",cityPic:\"\"});\r\n    const [newItinerary,setNewItinerary]=useState({\r\n        itineraryName:\"\",userName:\"\",userPicName:\"\",likes:\"\",duration:\"\",price:\"\",\r\n        idCity:\"\",activityName:\"\",activityPic:\"\",userName:\"\",userPic:\"\",userComment:\"\"\r\n    })\r\n    \r\n    const sendCity=(e)=>{\r\n        e.preventDefault()\r\n        if ((newCity.cityName=== \"\") || (newCity.cityPic===\"\")){\r\n            Swal.fire('Fill the fields')\r\n            return false}\r\n        else{\r\n            addCity(newCity)\r\n            Swal.fire({\r\n                position: 'top-end',\r\n                icon: 'success',\r\n                title: 'New City Created',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n              })}\r\n    }\r\n    const sendItinerary=(e)=>{\r\n       e.preventDefault()\r\n\r\n    }\r\n    return(\r\n    <>  \r\n        <div className=\"admin\">\r\n            <div className=\"adminCity\">\r\n                <h3>CITIES</h3>\r\n                <div className=\"formAddCity\">\r\n                    <input type=\"text\" placeholder=\"Enter new city name\" name=\"cityName\" \r\n                        onChange={(e)=>setNewCity ({...newCity,[e.target.name]:e.target.value})} />\r\n                    <input type=\"text\" placeholder=\"Image name (name.jpg)\" name=\"cityPic\" \r\n                        onChange={(e)=>setNewCity({...newCity,[e.target.name]:e.target.value})} />\r\n                    <button onClick={sendCity}>ADD NEW CITY</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"adminItinerary\">\r\n                <h3>ITINERARIES</h3>\r\n                <div className=\"formAddItinerary\">\r\n                    <input type=\"text\" placeholder=\"itineraryName\" name=\"itineraryName\" onChange={(e)=>setNewCity ({...newItinerary,[e.target.name]:e.target.value})}/>\r\n                    <input type=\"text\" placeholder=\"userName\" name=\"userName\"/>\r\n                    <input type=\"text\" placeholder=\"userPicName\" name=\"userPicName\"/>\r\n                    <input type=\"number\" placeholder=\"likes\" name=\"likes\"/>\r\n                    <input type=\"number\" placeholder=\"duration\" name=\"duration\"/>\r\n                    <input type=\"number\" placeholder=\"price\" name=\"price\"/>\r\n                    <input type=\"text\" placeholder=\"idCity\" name=\"idCity\"/>\r\n                    <form name=\"activities\">\r\n                        <input type=\"text\" placeholder=\"activityName\" name=\"activityName\"/>\r\n                        <input type=\"text\" placeholder=\"activityPic\" name=\"activityPic\"/>\r\n                    </form>\r\n                    <form name=\"comments\">\r\n                        <input type=\"text\" placeholder=\"userName\" name=\"userName\"/>\r\n                        <input type=\"text\" placeholder=\"userPic\"name=\"userPic\"/>\r\n                        <input type=\"text\" placeholder=\"userComment\" name=\"userComment\"/>\r\n                    </form>\r\n                    <button onClick={sendItinerary}>ADD NEW ITINERARY</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    \r\n    </>\r\n    )\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        cities: state.cityReducer.cities,\r\n        city: state.cityReducer.city,\r\n        itinerariesByCity: state.itineraryReducer.itinerariesByCity \r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    addCity: cityActions.addCity\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Admin);\r\n","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\cityReducer.js",["132","133"],"\r\nconst inicialState={\r\n    cities:[],\r\n    filteredCities:[]\r\n};\r\n\r\nconst cityReducer=(state=inicialState,action)=>{\r\n    switch (action.type) {\r\n        case (\"ALL_CITIES\"):\r\n            return{\r\n                ...state,\r\n                cities: action.payload,\r\n                filteredCities: action.payload\r\n            }\r\n            break;\r\n\r\n        case (\"FILTERED_CITIES\"):\r\n            return{\r\n                ...state,\r\n                filteredCities: state.cities.filter(\r\n                    city=> city.cityName.toUpperCase().indexOf(action.payload.toUpperCase().trim())===0)\r\n            }\r\n            break;\r\n        case (\"ADD_CITY\"):\r\n            return state;\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default cityReducer;","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Itineraries.js",["134","135"],"import React,{useEffect,useState} from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport NavBar from \"./NavBar\";\r\nimport NotItineraries from './NotItineraries';\r\nimport {Link} from \"react-router-dom\";\r\nimport Itinerary from \"./Itinerary\";\r\nimport {connect} from \"react-redux\";\r\nimport itineraryActions from \"../redux/actions/itineraryActions\";\r\nimport cityActions from \"../redux/actions/cityActions\";\r\nimport Loader from \"./Loader\"\r\n\r\n\r\nconst Itineraries = ({getCities,cities,itinerariesByCity,getItinerariesByCityId,match:{params:{idCity}}}) => {\r\n    const [city,setCity]=useState({});\r\n\r\n    useEffect(() => {\r\n        if(cities.length===0){getCities()}\r\n        window.scrollTo(0, 0)\r\n        getItinerariesByCityId(idCity)\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        setCity(cities.find(city=>city._id===idCity))\r\n    }, [cities])\r\n    \r\n    if(!city){return <Loader/> }\r\n\r\n    return (\r\n        <>\r\n            <NavBar/>\r\n            <section className=\"\">\r\n                \r\n                <div className=\"itineraryCity\" style={{backgroundImage:`url(\"../assets/${city.cityPic}\")`}}>\r\n                    <div className=\"cityTitle\"><h3>{city.cityName}</h3></div>\r\n                </div> \r\n                <div className=\"container\">\r\n\r\n                    {(itinerariesByCity.length===0) && <NotItineraries/>}\r\n                    \r\n                    {itinerariesByCity.map(itinerary=>\r\n                        <Itinerary key={itinerary._id} itinerary1={itinerary} />\r\n                    )}\r\n\r\n                    <div className=\"itineraryButtons\">\r\n                        <button ><Link to=\"/cities\"><ArrowBackIcon /></Link></button>\r\n                        <button ><Link to=\"/\"><HomeIcon /></Link></button>\r\n                    </div> \r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps= (state) =>{\r\n    return{\r\n        cities: state.cityReducer.cities,\r\n        itinerariesByCity: state.itineraryReducer.itinerariesByCity \r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    getCities: cityActions.getCities,\r\n    getItinerariesByCityId: itineraryActions.getItinerariesByCityId\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Itineraries);\r\n","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\userReducer.js",["136","137"],"const initial={\r\n    loggedUser:null\r\n}\r\nconst userReducer=(state=initial,action)=>{\r\n\r\n    switch (action.type) {\r\n        case (\"LOG_IN\"):\r\n            localStorage.setItem(\"name\",action.payload.response.name);\r\n            localStorage.setItem(\"token\",action.payload.response.token);\r\n            localStorage.setItem(\"id\",action.payload.response.id);\r\n            localStorage.setItem(\"pic\",action.payload.response.pic);\r\n            \r\n            return{\r\n                ...state,\r\n                loggedUser: action.payload.response\r\n            }\r\n            break;\r\n        case (\"LOG_OUT\"):\r\n            localStorage.clear();\r\n            return{\r\n                ...state,\r\n                loggedUser:null\r\n            }\r\n                break;    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default userReducer;","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\HomePage.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Cities.js",["138"],"import { useEffect } from \"react\";\r\nimport City from \"./City\";\r\nimport NavBar from \"./NavBar\";\r\nimport CityNotFound from \"./CityNotFound\";\r\nimport Loader from \"./Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport cityActions from \"../redux/actions/cityActions\";\r\n\r\nconst Cities=(props)=>{\r\n\r\n    useEffect(() => {\r\n        if(props.citiesFiltered){props.filterCities(\"\")}\r\n        if(props.cities.length===0){props.allCities()}\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n\r\n    if(props.cities.length===0){\r\n        return (<>\r\n                  <NavBar/>\r\n                  <Loader/>\r\n                </>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <section className=\"container sectionCities\">\r\n                <input type=\"text\" placeholder=\"Place a city name\" onChange={(e)=>props.filterCities(e.target.value)} /> \r\n                {props.citiesFiltered.length===0 ?<CityNotFound />: props.citiesFiltered.map(city => <City key={city._id} city={city}/>)}\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        cities: state.cityReducer.cities,\r\n        citiesFiltered: state.cityReducer.filteredCities,\r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    allCities: cityActions.getCities,\r\n    filterCities: cityActions.getFilterCities\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cities);","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Login.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Register.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\NavBar.js",["139"],"import { connect } from \"react-redux\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport userActions from \"../redux/actions/userActions\";\r\nimport {useEffect} from \"react\";\r\nconst NavBar= ({loggedUser,logOut}) =>{\r\n    \r\n    return(\r\n    <>\r\n        <div className=\"divHeader\">\r\n            <div className=\"logInOut\">\r\n                {/* LINKS A MOSTRAR SEGUN USUARIO LOGUEADO */}\r\n                {loggedUser===null\r\n                ?<><Link to=\"/logIn\"><h6>Log In</h6></Link><Link to=\"/register\"><h6>Sign Up</h6></Link></>\r\n                :<><Link to=\"#\" onClick={logOut}><h6>Log Out</h6></Link></>}\r\n            </div>\r\n            <div className=\"headerUserPic\">\r\n                {loggedUser && <div className=\"fotoUsuario\" \r\n                    style={{backgroundImage:`url(\"${loggedUser.pic}\")`}}></div>}\r\n                {loggedUser===null && <div className=\"fotoUsuario\" \r\n                    style={{backgroundImage: 'url(\"../assets/no-usuario.png\")'}}></div>}\r\n            </div>\r\n            <nav id=\"nav1\">\r\n                <ul>\r\n                    <NavLink exact to=\"/\"><p>Home</p></NavLink>\r\n                    <NavLink to=\"/cities\"><p>Cities</p></NavLink>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n        \r\n    \r\n    </>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n      loggedUser:state.userReducer.loggedUser\r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    logOut:userActions.logOut\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(NavBar);","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\actions\\cityActions.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\actions\\itineraryActions.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Carousel.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Logo.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\CallToAction.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Itinerary.js",["140"],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\City.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\NotItineraries.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\CityNotFound.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Activities.js",[],"C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Comment.js",["141"],"import React from 'react'\r\nimport itineraryActions from '../redux/actions/itineraryActions';\r\nimport {connect} from \"react-redux\"\r\nimport {useState,useEffect} from \"react\"\r\n\r\nconst Comment = ({comment,deleteComment,editComment,itineraryId,setItinerary,loggedUser}) => {\r\n    const [editMode,setEditMode]=useState(false);\r\n    const [editedComment,setEditedComment]=useState(comment.userComment);\r\n    \r\n    const sendCommentToDelete=async (e)=>{\r\n        e.preventDefault();\r\n        const response= await deleteComment(comment,itineraryId);\r\n        setItinerary(response);\r\n    }\r\n    const sendCommentEdited=async (e)=>{\r\n        e.preventDefault();\r\n        const response= await editComment(comment,editedComment,itineraryId);\r\n        setItinerary(response);\r\n        setEditMode(!editMode); \r\n    }\r\n\r\n    return (\r\n        <div className=\"comment\">\r\n            <div className=\"userPic\" style={{backgroundImage:`url(\"${comment.userPic}\")`}}></div>\r\n            <div className=\"comment1\">\r\n                <div className=\"userName\">{comment.userName} says:</div>\r\n                {editMode &&\r\n                    <div className=\"userComment\">\r\n                        <form onSubmit={sendCommentEdited}>\r\n                            <input type=\"text\" defaultValue={comment.userComment} onChange={e=>setEditedComment(e.target.value)}/> \r\n                            <button onClick={()=>setEditMode(!editMode)}>Cancel</button> \r\n                            <button type=\"submit\" >Confirm</button>\r\n                        </form> \r\n                    </div>\r\n                }\r\n                <div className=\"userComment\">\r\n                {!editMode && <div className=\"userComment\">{comment.userComment}</div>}\r\n                    {(loggedUser && loggedUser.id===comment._id && !editMode)&&  \r\n                        <>    \r\n                            <button onClick={sendCommentToDelete}>X</button>\r\n                            <button onClick={()=>setEditMode(!editMode)}>Edit</button>\r\n                        </>\r\n                    }\r\n                </div>          \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        loggedUser:state.userReducer.loggedUser\r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    deleteComment:itineraryActions.deleteComment,\r\n    editComment:itineraryActions.editComment\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Comment);","C:\\Users\\Fran\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Activity.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":13,"column":13,"nodeType":"148","messageId":"149","endLine":13,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":8,"column":25,"nodeType":"152","messageId":"153","endLine":8,"endColumn":40},{"ruleId":"154","severity":1,"message":"155","line":10,"column":50,"nodeType":"156","messageId":"157","endLine":10,"endColumn":58},{"ruleId":"146","severity":1,"message":"147","line":15,"column":13,"nodeType":"148","messageId":"149","endLine":15,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":23,"column":13,"nodeType":"148","messageId":"149","endLine":23,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":21,"column":8,"nodeType":"160","endLine":21,"endColumn":10,"suggestions":"161"},{"ruleId":"158","severity":1,"message":"162","line":25,"column":8,"nodeType":"160","endLine":25,"endColumn":16,"suggestions":"163"},{"ruleId":"146","severity":1,"message":"147","line":17,"column":13,"nodeType":"148","messageId":"149","endLine":17,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":24,"column":17,"nodeType":"148","messageId":"149","endLine":24,"endColumn":23},{"ruleId":"158","severity":1,"message":"164","line":15,"column":8,"nodeType":"160","endLine":15,"endColumn":10,"suggestions":"165"},{"ruleId":"150","severity":1,"message":"166","line":4,"column":9,"nodeType":"152","messageId":"153","endLine":4,"endColumn":18},{"ruleId":"158","severity":1,"message":"167","line":26,"column":8,"nodeType":"160","endLine":26,"endColumn":10,"suggestions":"168"},{"ruleId":"150","severity":1,"message":"166","line":4,"column":18,"nodeType":"152","messageId":"153","endLine":4,"endColumn":27},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-unused-vars","'setNewItinerary' is assigned a value but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'userName'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cities.length', 'getCities', 'getItinerariesByCityId', and 'idCity'. Either include them or remove the dependency array. If 'getItinerariesByCityId' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["171"],"React Hook useEffect has a missing dependency: 'idCity'. Either include it or remove the dependency array. If 'setCity' needs the current value of 'idCity', you can also switch to useReducer instead of useState and read 'idCity' in the reducer.",["172"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["173"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'getItinerariesByCityId', 'itinerary', and 'loggedUser'. Either include them or remove the dependency array. If 'getItinerariesByCityId' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [cities.length, getCities, getItinerariesByCityId, idCity]",{"range":"183","text":"184"},"Update the dependencies array to be: [cities, idCity]",{"range":"185","text":"186"},"Update the dependencies array to be: [props]",{"range":"187","text":"188"},"Update the dependencies array to be: [getItinerariesByCityId, itinerary, loggedUser]",{"range":"189","text":"190"},[811,813],"[cities.length, getCities, getItinerariesByCityId, idCity]",[907,915],"[cities, idCity]",[471,473],"[props]",[1089,1091],"[getItinerariesByCityId, itinerary, loggedUser]"]
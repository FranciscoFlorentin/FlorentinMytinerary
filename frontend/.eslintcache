[{"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\index.js":"1","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\App.js":"2","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\mainReducer.js":"3","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\HomePage.js":"4","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Itineraries.js":"5","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Footer.js":"6","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\actions\\userActions.js":"7","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Login.js":"8","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\cityReducer.js":"9","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\userReducer.js":"10","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\itineraryReducer.js":"11","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Admin.js":"12","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Register.js":"13","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Cities.js":"14","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\NavBar.js":"15","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Itinerary.js":"16","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\actions\\itineraryActions.js":"17","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\actions\\cityActions.js":"18","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Logo.js":"19","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\NotItineraries.js":"20","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Loader.js":"21","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Header.js":"22","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\CityNotFound.js":"23","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\City.js":"24","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Carousel.js":"25","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\CallToAction.js":"26","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Activities.js":"27","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Comment.js":"28","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Activity.js":"29"},{"size":485,"mtime":1614035605931,"results":"30","hashOfConfig":"31"},{"size":1554,"mtime":1614039252471,"results":"32","hashOfConfig":"31"},{"size":308,"mtime":1614035605937,"results":"33","hashOfConfig":"31"},{"size":522,"mtime":1614035605922,"results":"34","hashOfConfig":"31"},{"size":2290,"mtime":1614039848008,"results":"35","hashOfConfig":"31"},{"size":1729,"mtime":1614035605890,"results":"36","hashOfConfig":"31"},{"size":1910,"mtime":1614035605933,"results":"37","hashOfConfig":"31"},{"size":3281,"mtime":1614035605927,"results":"38","hashOfConfig":"31"},{"size":780,"mtime":1614035605934,"results":"39","hashOfConfig":"31"},{"size":846,"mtime":1614035606258,"results":"40","hashOfConfig":"31"},{"size":1127,"mtime":1614039180094,"results":"41","hashOfConfig":"31"},{"size":3607,"mtime":1614035605490,"results":"42","hashOfConfig":"31"},{"size":5246,"mtime":1614035605930,"results":"43","hashOfConfig":"31"},{"size":1379,"mtime":1614035605888,"results":"44","hashOfConfig":"31"},{"size":1510,"mtime":1614035605929,"results":"45","hashOfConfig":"31"},{"size":5095,"mtime":1614039928332,"results":"46","hashOfConfig":"31"},{"size":3334,"mtime":1614035605933,"results":"47","hashOfConfig":"31"},{"size":1036,"mtime":1614035605932,"results":"48","hashOfConfig":"31"},{"size":808,"mtime":1614035605928,"results":"49","hashOfConfig":"31"},{"size":392,"mtime":1614035605929,"results":"50","hashOfConfig":"31"},{"size":407,"mtime":1614035605927,"results":"51","hashOfConfig":"31"},{"size":518,"mtime":1614035605891,"results":"52","hashOfConfig":"31"},{"size":330,"mtime":1614035605889,"results":"53","hashOfConfig":"31"},{"size":677,"mtime":1614035605888,"results":"54","hashOfConfig":"31"},{"size":2152,"mtime":1614035605886,"results":"55","hashOfConfig":"31"},{"size":1051,"mtime":1614035605885,"results":"56","hashOfConfig":"31"},{"size":375,"mtime":1614035605489,"results":"57","hashOfConfig":"31"},{"size":2437,"mtime":1614035605890,"results":"58","hashOfConfig":"31"},{"size":417,"mtime":1614035605489,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"9lmyjn",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\index.js",[],["128","129"],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\App.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\mainReducer.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\HomePage.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Itineraries.js",["130","131"],"import React,{useEffect,useState} from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport NavBar from \"./NavBar\";\r\nimport NotItineraries from './NotItineraries';\r\nimport {Link} from \"react-router-dom\";\r\nimport Itinerary from \"./Itinerary\";\r\nimport {connect} from \"react-redux\";\r\nimport itineraryActions from \"../redux/actions/itineraryActions\";\r\nimport cityActions from \"../redux/actions/cityActions\";\r\nimport Loader from \"./Loader\"\r\n\r\n\r\nconst Itineraries = ({getCities,cities,itinerariesByCity,getItinerariesByCityId,match:{params:{idCity}}}) => {\r\n    const [city,setCity]=useState({});\r\n\r\n    useEffect(() => {\r\n        if(cities.length===0){getCities()}\r\n        window.scrollTo(0, 0)\r\n        getItinerariesByCityId(idCity)\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        setCity(cities.find(city=>city._id===idCity))\r\n    }, [cities])\r\n    \r\n    if(!city){return <Loader/> }\r\n\r\n    return (\r\n        <>\r\n            <NavBar/>\r\n            <section className=\"\">\r\n                \r\n                <div className=\"itineraryCity\" style={{backgroundImage:`url(\"../assets/${city.cityPic}\")`}}>\r\n                    <div className=\"cityTitle\"><h3>{city.cityName}</h3></div>\r\n                </div> \r\n                <div className=\"container\">\r\n\r\n                    {(itinerariesByCity.length===0) && <NotItineraries/>}\r\n                    \r\n                    {itinerariesByCity.map(itinerary=>\r\n                        <Itinerary key={itinerary._id} itinerary={itinerary} />\r\n                    )}\r\n\r\n                    <div className=\"itineraryButtons\">\r\n                        <button ><Link to=\"/cities\"><ArrowBackIcon /></Link></button>\r\n                        <button ><Link to=\"/\"><HomeIcon /></Link></button>\r\n                    </div> \r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps= (state) =>{\r\n    return{\r\n        cities: state.cityReducer.cities,\r\n        itinerariesByCity: state.itineraryReducer.itinerariesByCity \r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    getCities: cityActions.getCities,\r\n    getItinerariesByCityId: itineraryActions.getItinerariesByCityId\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Itineraries);\r\n","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Login.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\cityReducer.js",["132","133"],"\r\nconst inicialState={\r\n    cities:[],\r\n    filteredCities:[]\r\n};\r\n\r\nconst cityReducer=(state=inicialState,action)=>{\r\n    switch (action.type) {\r\n        case (\"ALL_CITIES\"):\r\n            return{\r\n                ...state,\r\n                cities: action.payload,\r\n                filteredCities: action.payload\r\n            }\r\n            break;\r\n\r\n        case (\"FILTERED_CITIES\"):\r\n            return{\r\n                ...state,\r\n                filteredCities: state.cities.filter(\r\n                    city=> city.cityName.toUpperCase().indexOf(action.payload.toUpperCase().trim())===0)\r\n            }\r\n            break;\r\n        case (\"ADD_CITY\"):\r\n            return state;\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default cityReducer;","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\userReducer.js",["134","135"],"const initial={\r\n    loggedUser:null\r\n}\r\nconst userReducer=(state=initial,action)=>{\r\n\r\n    switch (action.type) {\r\n        case (\"LOG_IN\"):\r\n            localStorage.setItem(\"name\",action.payload.response.name);\r\n            localStorage.setItem(\"token\",action.payload.response.token);\r\n            localStorage.setItem(\"id\",action.payload.response.id);\r\n            localStorage.setItem(\"pic\",action.payload.response.pic);\r\n            \r\n            return{\r\n                ...state,\r\n                loggedUser: action.payload.response\r\n            }\r\n            break;\r\n        case (\"LOG_OUT\"):\r\n            localStorage.clear();\r\n            return{\r\n                ...state,\r\n                loggedUser:null\r\n            }\r\n                break;    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default userReducer;","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\reducers\\itineraryReducer.js",["136"],"const initial={\r\n    itinerariesByCity:[],\r\n    update:false,\r\n};\r\nconst hola=(oldsItineraries,newItinerary)=>{\r\n    return (oldsItineraries.map(itinerary=>{\r\n        if(itinerary._id===newItinerary._id){itinerary=newItinerary;}\r\n        return itinerary\r\n    }\r\n    ))\r\n}\r\nconst itineraryReducer=(state=initial,action)=>{\r\n    switch (action.type) {\r\n        case (\"ITINERARIES_BY_CITY\"):\r\n            return{\r\n                ...state,\r\n                itinerariesByCity: action.payload\r\n            }\r\n            break;\r\n        \r\n        case (\"UPDATE_ITINERARIES\"):\r\n            const aux=hola(state.itinerariesByCity,action.payload);\r\n            console.log(\"/////////////STORE////////////////////////////\")\r\n            console.log(aux)\r\n            console.log(\"//////////////PAYLOAD//////////////////////////////////\")\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                staitinerariesByCity:aux,\r\n                update: (state.update===true)? false : true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default itineraryReducer;","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Admin.js",["137","138"],"import {connect} from \"react-redux\";\r\nimport {useState} from \"react\";\r\nimport Swal from 'sweetalert2';\r\nimport cityActions from \"../redux/actions/cityActions\";\r\n\r\nconst Admin=({addCity})=>{\r\n    const [newCity,setNewCity]=useState({cityName:\"\",cityPic:\"\"});\r\n    const [newItinerary,setNewItinerary]=useState({\r\n        itineraryName:\"\",userName:\"\",userPicName:\"\",likes:\"\",duration:\"\",price:\"\",\r\n        idCity:\"\",activityName:\"\",activityPic:\"\",userName:\"\",userPic:\"\",userComment:\"\"\r\n    })\r\n    \r\n    const sendCity=(e)=>{\r\n        e.preventDefault()\r\n        if ((newCity.cityName=== \"\") || (newCity.cityPic===\"\")){\r\n            Swal.fire('Fill the fields')\r\n            return false}\r\n        else{\r\n            addCity(newCity)\r\n            Swal.fire({\r\n                position: 'top-end',\r\n                icon: 'success',\r\n                title: 'New City Created',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n              })}\r\n    }\r\n    const sendItinerary=(e)=>{\r\n       e.preventDefault()\r\n\r\n    }\r\n    return(\r\n    <>  \r\n        <div className=\"admin\">\r\n            <div className=\"adminCity\">\r\n                <h3>CITIES</h3>\r\n                <div className=\"formAddCity\">\r\n                    <input type=\"text\" placeholder=\"Enter new city name\" name=\"cityName\" \r\n                        onChange={(e)=>setNewCity ({...newCity,[e.target.name]:e.target.value})} />\r\n                    <input type=\"text\" placeholder=\"Image name (name.jpg)\" name=\"cityPic\" \r\n                        onChange={(e)=>setNewCity({...newCity,[e.target.name]:e.target.value})} />\r\n                    <button onClick={sendCity}>ADD NEW CITY</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"adminItinerary\">\r\n                <h3>ITINERARIES</h3>\r\n                <div className=\"formAddItinerary\">\r\n                    <input type=\"text\" placeholder=\"itineraryName\" name=\"itineraryName\" onChange={(e)=>setNewCity ({...newItinerary,[e.target.name]:e.target.value})}/>\r\n                    <input type=\"text\" placeholder=\"userName\" name=\"userName\"/>\r\n                    <input type=\"text\" placeholder=\"userPicName\" name=\"userPicName\"/>\r\n                    <input type=\"number\" placeholder=\"likes\" name=\"likes\"/>\r\n                    <input type=\"number\" placeholder=\"duration\" name=\"duration\"/>\r\n                    <input type=\"number\" placeholder=\"price\" name=\"price\"/>\r\n                    <input type=\"text\" placeholder=\"idCity\" name=\"idCity\"/>\r\n                    <form name=\"activities\">\r\n                        <input type=\"text\" placeholder=\"activityName\" name=\"activityName\"/>\r\n                        <input type=\"text\" placeholder=\"activityPic\" name=\"activityPic\"/>\r\n                    </form>\r\n                    <form name=\"comments\">\r\n                        <input type=\"text\" placeholder=\"userName\" name=\"userName\"/>\r\n                        <input type=\"text\" placeholder=\"userPic\"name=\"userPic\"/>\r\n                        <input type=\"text\" placeholder=\"userComment\" name=\"userComment\"/>\r\n                    </form>\r\n                    <button onClick={sendItinerary}>ADD NEW ITINERARY</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    \r\n    </>\r\n    )\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        cities: state.cityReducer.cities,\r\n        city: state.cityReducer.city,\r\n        itinerariesByCity: state.itineraryReducer.itinerariesByCity \r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    addCity: cityActions.addCity\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Admin);\r\n","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Register.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Cities.js",["139"],"import { useEffect } from \"react\";\r\nimport City from \"./City\";\r\nimport NavBar from \"./NavBar\";\r\nimport CityNotFound from \"./CityNotFound\";\r\nimport Loader from \"./Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport cityActions from \"../redux/actions/cityActions\";\r\n\r\nconst Cities=(props)=>{\r\n\r\n    useEffect(() => {\r\n        if(props.citiesFiltered){props.filterCities(\"\")}\r\n        if(props.cities.length===0){props.allCities()}\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n\r\n    if(props.cities.length===0){\r\n        return (<>\r\n                  <NavBar/>\r\n                  <Loader/>\r\n                </>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <section className=\"container sectionCities\">\r\n                <input type=\"text\" placeholder=\"Search city\" onChange={(e)=>props.filterCities(e.target.value)} /> \r\n                {props.citiesFiltered.length===0 ?<CityNotFound />: props.citiesFiltered.map(city => <City key={city._id} city={city}/>)}\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        cities: state.cityReducer.cities,\r\n        citiesFiltered: state.cityReducer.filteredCities,\r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    allCities: cityActions.getCities,\r\n    filterCities: cityActions.getFilterCities\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cities);","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\NavBar.js",["140"],"import { connect } from \"react-redux\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport userActions from \"../redux/actions/userActions\";\r\nimport {useEffect} from \"react\";\r\nconst NavBar= ({loggedUser,logOut}) =>{\r\n    \r\n    return(\r\n    <>\r\n        <div className=\"divHeader\">\r\n            <div className=\"logInOut\">\r\n                {/* LINKS A MOSTRAR SEGUN USUARIO LOGUEADO */}\r\n                {loggedUser===null\r\n                ?<><Link to=\"/logIn\"><h6>Log In</h6></Link><Link to=\"/register\"><h6>Sign Up</h6></Link></>\r\n                :<><Link to=\"#\" onClick={logOut}><h6>Log Out</h6></Link></>}\r\n            </div>\r\n            <div className=\"headerUserPic\">\r\n                {loggedUser && <div className=\"fotoUsuario\" \r\n                    style={{backgroundImage:`url(\"${loggedUser.pic}\")`}}></div>}\r\n                {loggedUser===null && <div className=\"fotoUsuario\" \r\n                    style={{backgroundImage: 'url(\"../assets/no-usuario.png\")'}}></div>}\r\n            </div>\r\n            <nav id=\"nav1\">\r\n                <ul>\r\n                    <NavLink exact to=\"/\"><p>Home</p></NavLink>\r\n                    <NavLink to=\"/cities\"><p>Cities</p></NavLink>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n        \r\n    \r\n    </>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n      loggedUser:state.userReducer.loggedUser\r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    logOut:userActions.logOut\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(NavBar);","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Itinerary.js",["141"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport {useState,useEffect} from \"react\";\r\nimport Activities from './Activities';\r\nimport Comment from \"./Comment\";\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport itineraryActions from '../redux/actions/itineraryActions';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Itinerary = ({loggedUser,addComment,update,itinerary,itineraryLiked}) => {\r\n    const [viewMoreLess,setViewMoreLess]=useState(false);\r\n    const [newComment,setNewComment]=useState(\"\");\r\n    const [itinerary,setItinerary]=useState(itinerary1);\r\n    const [userLike,setUserLike]=useState(null);\r\n\r\n    useEffect(() => {\r\n      \r\n        if(loggedUser && itinerary.userLikes.find(id=>id===loggedUser.id)){\r\n            setUserLike(true);\r\n        }else{ setUserLike(false)}  \r\n        console.log(update)\r\n        console.log(itinerary)\r\n    }, [\" \",update])\r\n   \r\n    // LIKES\r\n    const liked=async()=>{\r\n        if(loggedUser){\r\n            const response = await itineraryLiked(itinerary._id);\r\n           \r\n            // setItinerary(response);\r\n            setUserLike(!userLike)\r\n        }\r\n        else{Swal.fire(`You must be logged `)}\r\n    }\r\n    // COMMENTS\r\n    const commentInput=(e)=>{\r\n        e.preventDefault()\r\n        setNewComment(e.target.value); \r\n    }\r\n    const commentSend= async (e)=>{\r\n        e.preventDefault();\r\n        setNewComment(e.target.value);\r\n        const response= await addComment(newComment,itinerary._id);  \r\n        // setItinerary(response);\r\n    }\r\n    \r\n    return (\r\n        <>  \r\n            \r\n            <div className=\"itinerary\">\r\n                <div className=\"itineraryContent\">\r\n                    <div className=\"itineraryContent1\">\r\n                        <div className=\"itineraryUserImg\" style={{backgroundImage:`url(\"../assets/${itinerary.userPicName}\")`}}></div>\r\n                        <div className=\"itineraryUserName\">{itinerary.userName}</div>\r\n                    </div>\r\n                    <div className=\"itineraryContent2\">\r\n                        <div className=\"itineraryName\"><h4>{itinerary.itineraryName}</h4></div>\r\n                        <div className=\"itineraryHashtag\">{itinerary.hashtag.map(hashtag=><h6>{hashtag}</h6> )}</div>\r\n                        <div className=\"viewMoreLess\">{viewMoreLess===false && <button onClick={()=>setViewMoreLess(!viewMoreLess)} >View More</button> }</div>\r\n                    </div>\r\n                    <div className=\"itineraryContent3\">\r\n                        <div className=\"likeIcon\">\r\n                                {userLike===true?<FavoriteIcon/>:<FavoriteBorderIcon/>} \r\n                                <p>{itinerary.likes}</p>\r\n                                <button onClick={liked}>{userLike===false ?<p>Like</p>: <p>Dislike</p> }</button>\r\n                        </div>\r\n                        <div>Duration: {itinerary.duration} h.</div>\r\n                        <div className=\"priceIcon\"> {\r\n                            Array(itinerary.price).fill(<AttachMoneyIcon/>) }\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n            {viewMoreLess===true  \r\n            ?  <div className=\"itineraryShowHide\">\r\n                    <Activities activities={itinerary.activities}/> \r\n                    <div className=\"comments\"> \r\n                        {itinerary.comments.map(comment=><Comment key={comment._id} comment={comment} itineraryId={itinerary._id} \r\n                        //  setItinerary={setItinerary}\r\n                        />)}\r\n                        <div className=\"divInputComment\">\r\n                            {loggedUser \r\n                            ?\r\n                                <>\r\n                                    <form onSubmit={commentSend}>\r\n                                        <input type=\"text \" placeholder=\"Write a comment\" onChange={commentInput} />\r\n                                        <button type=\"submit\">Comment</button>\r\n                                    </form>\r\n                                </>\r\n                            :<input type=\"text \" disabled placeholder=\"You must logged to comment\"/>}\r\n                        </div>\r\n                    </div>\r\n                        <div className=\"itineraryButtons\">\r\n                            {viewMoreLess===true && <button onClick={()=>setViewMoreLess(!viewMoreLess)}>View Less</button> }\r\n                        </div>\r\n                </div>\r\n                \r\n            :<></>  \r\n            \r\n            }\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps= state=>{\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        update: state.itineraryReducer.update\r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    addComment:itineraryActions.addComment,\r\n    itineraryLiked:itineraryActions.itineraryLiked\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Itinerary);","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\actions\\itineraryActions.js",["142"],"import axios from \"axios\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst itineraryActions ={\r\n    getItinerariesByCityId: (cityId)=>{\r\n        return async (dispatch,getState)=>{\r\n            axios.get(`http://localhost:4000/api/itineraries/by_city/${cityId}`)\r\n            .then(data=>dispatch({type: \"ITINERARIES_BY_CITY\",payload: data.data.response}))\r\n            .catch(error=>Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error\r\n            }))\r\n        }\r\n    },\r\n    addComment: (userComment,itineraryId)=>{\r\n        return async(dispatch,getState)=>{\r\n            const response = await axios.put(`http://localhost:4000/api/itinerary/addComment/${itineraryId}`,{userComment},{\r\n                headers: {\r\n                    Authorization: `Bearer ${getState().userReducer.loggedUser.token}`\r\n                }\r\n            })\r\n            if(response){\r\n                \r\n                var aux=getState().itineraryReducer.itinerariesByCity\r\n                aux.map(itinerary=>{\r\n                    if(itinerary._id===response.data.response._id){\r\n                        console.log(aux)\r\n                        aux.splice(itinerary,1,response.data.response)\r\n                        console.log(aux)\r\n                    }})\r\n                dispatch({type:\"UPDATE_ITINERARIES\", payload:aux})\r\n            }\r\n            else {console.log(response)}\r\n        }\r\n    },\r\n    deleteComment: (commentToDelete,itineraryId)=>{\r\n        return async(dispatch,getState)=>{\r\n            const response = await axios.put(`http://localhost:4000/api/itinerary/deleteComment/${itineraryId}`,{commentToDelete},{\r\n                headers: {\r\n                    Authorization: `Bearer ${getState().userReducer.loggedUser.token}`\r\n                }\r\n            })\r\n            if(response){\r\n                dispatch({type: \"UPDATE_COMMENTS\",payload: response.data.response})\r\n                // return response.data.response\r\n            }\r\n            else{console.log(response)}\r\n        }\r\n    },\r\n    editComment: (comment,editedComment,itineraryId)=>{\r\n        return async(dispatch,getState)=>{\r\n            const response = await axios.put(`http://localhost:4000/api/itinerary/editComment/${itineraryId}`,{comment,editedComment},{\r\n                headers: {\r\n                    Authorization: `Bearer ${getState().userReducer.loggedUser.token}`\r\n                }\r\n            })\r\n            if(response){\r\n                dispatch({type: \"UPDATE_ITINERARIES\",payload: response.data.response})\r\n                // return response.data.response\r\n            }\r\n            else { console.log(response)}\r\n        }\r\n    },\r\n    itineraryLiked: (itineraryId)=>{\r\n        return async (dispatch,getState)=>{\r\n            if(getState().userReducer.loggedUser){\r\n                const response= await axios.put(`http://localhost:4000/api/itinerary/likes/${itineraryId}`,{},{\r\n                headers:{\r\n                    Authorization: `Bearer ${getState().userReducer.loggedUser.token}`\r\n                }\r\n            })\r\n            if(response){\r\n                dispatch({type:\"UPDATE_ITINERARIES\", payload:response.data.response})\r\n            } else{\r\n                alert(\"You must logged\")\r\n            }\r\n    }   \r\n        }}\r\n}\r\nexport default itineraryActions;","C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\redux\\actions\\cityActions.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Logo.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\NotItineraries.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Header.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\CityNotFound.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\City.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Carousel.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\CallToAction.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Activities.js",[],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Comment.js",["143"],"C:\\Users\\franc\\Desktop\\FlorentinMytinerary\\frontend\\src\\components\\Activity.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":21,"column":8,"nodeType":"150","endLine":21,"endColumn":10,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":25,"column":8,"nodeType":"150","endLine":25,"endColumn":16,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":15,"column":13,"nodeType":"156","messageId":"157","endLine":15,"endColumn":19},{"ruleId":"154","severity":1,"message":"155","line":23,"column":13,"nodeType":"156","messageId":"157","endLine":23,"endColumn":19},{"ruleId":"154","severity":1,"message":"155","line":17,"column":13,"nodeType":"156","messageId":"157","endLine":17,"endColumn":19},{"ruleId":"154","severity":1,"message":"155","line":24,"column":17,"nodeType":"156","messageId":"157","endLine":24,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":19,"column":13,"nodeType":"156","messageId":"157","endLine":19,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":8,"column":25,"nodeType":"160","messageId":"161","endLine":8,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":10,"column":50,"nodeType":"164","messageId":"165","endLine":10,"endColumn":58},{"ruleId":"148","severity":1,"message":"166","line":15,"column":8,"nodeType":"150","endLine":15,"endColumn":10,"suggestions":"167"},{"ruleId":"158","severity":1,"message":"168","line":4,"column":9,"nodeType":"160","messageId":"161","endLine":4,"endColumn":18},{"ruleId":null,"fatal":true,"severity":2,"message":"169","line":12,"column":50},{"ruleId":"170","severity":1,"message":"171","line":26,"column":34,"nodeType":"172","messageId":"173","endLine":26,"endColumn":36},{"ruleId":"158","severity":1,"message":"168","line":4,"column":18,"nodeType":"160","messageId":"161","endLine":4,"endColumn":27},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cities.length', 'getCities', 'getItinerariesByCityId', and 'idCity'. Either include them or remove the dependency array. If 'getItinerariesByCityId' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["176"],"React Hook useEffect has a missing dependency: 'idCity'. Either include it or remove the dependency array. If 'setCity' needs the current value of 'idCity', you can also switch to useReducer instead of useState and read 'idCity' in the reducer.",["177"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-unused-vars","'setNewItinerary' is assigned a value but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'userName'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["178"],"'useEffect' is defined but never used.","Parsing error: Identifier 'itinerary' has already been declared\n\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mSwal\u001b[39m from \u001b[32m'sweetalert2'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 12 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mItinerary\u001b[39m \u001b[33m=\u001b[39m ({loggedUser\u001b[33m,\u001b[39maddComment\u001b[33m,\u001b[39mupdate\u001b[33m,\u001b[39mitinerary\u001b[33m,\u001b[39mitineraryLiked}) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m    \u001b[36mconst\u001b[39m [viewMoreLess\u001b[33m,\u001b[39msetViewMoreLess]\u001b[33m=\u001b[39museState(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m    \u001b[36mconst\u001b[39m [newComment\u001b[33m,\u001b[39msetNewComment]\u001b[33m=\u001b[39museState(\u001b[32m\"\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m    \u001b[36mconst\u001b[39m [itinerary\u001b[33m,\u001b[39msetItinerary]\u001b[33m=\u001b[39museState(itinerary1)\u001b[33m;\u001b[39m\u001b[0m","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [cities.length, getCities, getItinerariesByCityId, idCity]",{"range":"185","text":"186"},"Update the dependencies array to be: [cities, idCity]",{"range":"187","text":"188"},"Update the dependencies array to be: [props]",{"range":"189","text":"190"},[811,813],"[cities.length, getCities, getItinerariesByCityId, idCity]",[907,915],"[cities, idCity]",[471,473],"[props]"]